import T from '@test';
import { MAX_SAFE_INTEGER } from '../common';
import { DecimalDigitCharLiteral as D } from '../digit';
import { CharArrayToNumber, NumberToCharArray } from '../parser';

// prettier-ignore
type AddMap = {
  '': {
    '0': { '0': '0'; '1': '1'; '2': '2'; '3': '3'; '4': '4'; '5': '5'; '6': '6'; '7': '7'; '8': '8'; '9': '9' };
    '1': { '0': '1'; '1': '2'; '2': '3'; '3': '4'; '4': '5'; '5': '6'; '6': '7'; '7': '8'; '8': '9'; '9': '0' };
    '2': { '0': '2'; '1': '3'; '2': '4'; '3': '5'; '4': '6'; '5': '7'; '6': '8'; '7': '9'; '8': '0'; '9': '1' };
    '3': { '0': '3'; '1': '4'; '2': '5'; '3': '6'; '4': '7'; '5': '8'; '6': '9'; '7': '0'; '8': '1'; '9': '2' };
    '4': { '0': '4'; '1': '5'; '2': '6'; '3': '7'; '4': '8'; '5': '9'; '6': '0'; '7': '1'; '8': '2'; '9': '3' };
    '5': { '0': '5'; '1': '6'; '2': '7'; '3': '8'; '4': '9'; '5': '0'; '6': '1'; '7': '2'; '8': '3'; '9': '4' };
    '6': { '0': '6'; '1': '7'; '2': '8'; '3': '9'; '4': '0'; '5': '1'; '6': '2'; '7': '3'; '8': '4'; '9': '5' };
    '7': { '0': '7'; '1': '8'; '2': '9'; '3': '0'; '4': '1'; '5': '2'; '6': '3'; '7': '4'; '8': '5'; '9': '6' };
    '8': { '0': '8'; '1': '9'; '2': '0'; '3': '1'; '4': '2'; '5': '3'; '6': '4'; '7': '5'; '8': '6'; '9': '7' };
    '9': { '0': '9'; '1': '0'; '2': '1'; '3': '2'; '4': '3'; '5': '4'; '6': '5'; '7': '6'; '8': '7'; '9': '8' };
  },
  '1': {
    '0': { '0': '1'; '1': '2'; '2': '3'; '3': '4'; '4': '5'; '5': '6'; '6': '7'; '7': '8'; '8': '9'; '9': '0' };
    '1': { '0': '2'; '1': '3'; '2': '4'; '3': '5'; '4': '6'; '5': '7'; '6': '8'; '7': '9'; '8': '0'; '9': '1' };
    '2': { '0': '3'; '1': '4'; '2': '5'; '3': '6'; '4': '7'; '5': '8'; '6': '9'; '7': '0'; '8': '1'; '9': '2' };
    '3': { '0': '4'; '1': '5'; '2': '6'; '3': '7'; '4': '8'; '5': '9'; '6': '0'; '7': '1'; '8': '2'; '9': '3' };
    '4': { '0': '5'; '1': '6'; '2': '7'; '3': '8'; '4': '9'; '5': '0'; '6': '1'; '7': '2'; '8': '3'; '9': '4' };
    '5': { '0': '6'; '1': '7'; '2': '8'; '3': '9'; '4': '0'; '5': '1'; '6': '2'; '7': '3'; '8': '4'; '9': '5' };
    '6': { '0': '7'; '1': '8'; '2': '9'; '3': '0'; '4': '1'; '5': '2'; '6': '3'; '7': '4'; '8': '5'; '9': '6' };
    '7': { '0': '8'; '1': '9'; '2': '0'; '3': '1'; '4': '2'; '5': '3'; '6': '4'; '7': '5'; '8': '6'; '9': '7' };
    '8': { '0': '9'; '1': '0'; '2': '1'; '3': '2'; '4': '3'; '5': '4'; '6': '5'; '7': '6'; '8': '7'; '9': '8' };
    '9': { '0': '0'; '1': '1'; '2': '2'; '3': '3'; '4': '4'; '5': '5'; '6': '6'; '7': '7'; '8': '8'; '9': '9' };
  }
};

// prettier-ignore
type AddCarryMap = {
  '': {
    '0': { '0': ''; '1': ''; '2': ''; '3': ''; '4': ''; '5': ''; '6': ''; '7': ''; '8': ''; '9': '' };
    '1': { '0': ''; '1': ''; '2': ''; '3': ''; '4': ''; '5': ''; '6': ''; '7': ''; '8': ''; '9': '1' };
    '2': { '0': ''; '1': ''; '2': ''; '3': ''; '4': ''; '5': ''; '6': ''; '7': ''; '8': '1'; '9': '1' };
    '3': { '0': ''; '1': ''; '2': ''; '3': ''; '4': ''; '5': ''; '6': ''; '7': '1'; '8': '1'; '9': '1' };
    '4': { '0': ''; '1': ''; '2': ''; '3': ''; '4': ''; '5': ''; '6': '1'; '7': '1'; '8': '1'; '9': '1' };
    '5': { '0': ''; '1': ''; '2': ''; '3': ''; '4': ''; '5': '1'; '6': '1'; '7': '1'; '8': '1'; '9': '1' };
    '6': { '0': ''; '1': ''; '2': ''; '3': ''; '4': '1'; '5': '1'; '6': '1'; '7': '1'; '8': '1'; '9': '1' };
    '7': { '0': ''; '1': ''; '2': ''; '3': '1'; '4': '1'; '5': '1'; '6': '1'; '7': '1'; '8': '1'; '9': '1' };
    '8': { '0': ''; '1': ''; '2': '1'; '3': '1'; '4': '1'; '5': '1'; '6': '1'; '7': '1'; '8': '1'; '9': '1' };
    '9': { '0': ''; '1': '1'; '2': '1'; '3': '1'; '4': '1'; '5': '1'; '6': '1'; '7': '1'; '8': '1'; '9': '1' };
  },
  '1': {
    '0': { '0': ''; '1': ''; '2': ''; '3': ''; '4': ''; '5': ''; '6': ''; '7': ''; '8': ''; '9': '1' };
    '1': { '0': ''; '1': ''; '2': ''; '3': ''; '4': ''; '5': ''; '6': ''; '7': ''; '8': '1'; '9': '1' };
    '2': { '0': ''; '1': ''; '2': ''; '3': ''; '4': ''; '5': ''; '6': ''; '7': '1'; '8': '1'; '9': '1' };
    '3': { '0': ''; '1': ''; '2': ''; '3': ''; '4': ''; '5': ''; '6': '1'; '7': '1'; '8': '1'; '9': '1' };
    '4': { '0': ''; '1': ''; '2': ''; '3': ''; '4': ''; '5': '1'; '6': '1'; '7': '1'; '8': '1'; '9': '1' };
    '5': { '0': ''; '1': ''; '2': ''; '3': ''; '4': '1'; '5': '1'; '6': '1'; '7': '1'; '8': '1'; '9': '1' };
    '6': { '0': ''; '1': ''; '2': ''; '3': '1'; '4': '1'; '5': '1'; '6': '1'; '7': '1'; '8': '1'; '9': '1' };
    '7': { '0': ''; '1': ''; '2': '1'; '3': '1'; '4': '1'; '5': '1'; '6': '1'; '7': '1'; '8': '1'; '9': '1' };
    '8': { '0': ''; '1': '1'; '2': '1'; '3': '1'; '4': '1'; '5': '1'; '6': '1'; '7': '1'; '8': '1'; '9': '1' };
    '9': { '0': '1'; '1': '1'; '2': '1'; '3': '1'; '4': '1'; '5': '1'; '6': '1'; '7': '1'; '8': '1'; '9': '1' };
  }
};

type AddOne<N1 extends D, N2 extends D | '', C extends '' | '1' = ''> = AddMap[C][N1][N2 extends ''
  ? '0'
  : N2];
type AddOneCarry<
  N1 extends D,
  N2 extends D | '',
  C extends '' | '1' = '',
> = AddCarryMap[C][N1][N2 extends '' ? '0' : N2];

type TestAddOne = T.Test.All<
  [
    T.Eq<'0', AddOne<'0', '0'>>,
    T.Eq<'1', AddOne<'0', '1'>>,
    T.Eq<'1', AddOne<'9', '2'>>,
    T.Eq<'8', AddOne<'9', '9'>>,
    T.Eq<'9', AddOne<'9', '9', '1'>>,
  ]
>;
type TestAddOneCarry = T.Test.All<
  [
    T.Eq<'', AddOneCarry<'0', '0'>>,
    T.Eq<'', AddOneCarry<'0', '1'>>,
    T.Eq<'1', AddOneCarry<'9', '2'>>,
    T.Eq<'1', AddOneCarry<'9', '9'>>,
    T.Eq<'1', AddOneCarry<'9', '9', '1'>>,
  ]
>;

type _Add<Arr1 extends string[], Arr2 extends string[], CB extends '' | '1' = ''> = Arr1 extends [
  ...infer Rest1 extends D[] | [],
  infer N1 extends D,
]
  ? Arr2 extends [...infer Rest2 extends D[] | [], infer N2 extends D]
    ? [..._Add<Rest1, Rest2, AddOneCarry<N1, N2, CB>>, AddOne<N1, N2, CB>]
    : [AddOneCarry<N1, CB>, AddOne<N1, CB>, ...Rest1]
  : Arr2 extends [...infer Rest2 extends D[] | [], infer N2 extends D]
  ? [AddOneCarry<N2, CB>, AddOne<N2, CB>, ...Rest2]
  : [CB, ...Arr2];

export type Add<N1 extends number | bigint, N2 extends number | bigint> = CharArrayToNumber<
  _Add<NumberToCharArray<N1>, NumberToCharArray<N2>>
>;

type TestAdd = T.Test.All<
  [
    T.Eq<0, Add<0, 0>>,
    T.Eq<1, Add<0, 1>>,
    T.Eq<11, Add<9, 2>>,
    T.Eq<20, Add<9, 11>>,
    T.Eq<99, Add<9, 90>>,
    T.Eq<100, Add<9, 91>>,
    T.Eq<9900719925474092, Add<MAX_SAFE_INTEGER, 1>>,
  ]
>;
